export let defaultValue = `<h1>javaScript深拷贝 </h1><p>首先要明白一个东西，javaScript没有完完全全的深拷贝，因为一个完美的深拷贝的话，你需要考虑到原生DOM/BOM对象、RegExp对象、函数、原型链处理的问题，浏览器兼容问题（不确定世上有没有这样一个完完全全的深拷贝方法），同时，深拷贝没有一个统一的定义，所以，不必追求一个通用完美的深拷贝，我们只需要根据我们的需求，选择最合适我们的一个深拷贝方法就可以了</p><p><br></p><p>Javascript中的数据分为原始值和引用值，对于原始值来说，它的值直接存储在栈内存中，而对于引用类型来说，它在栈内存中仅仅存储了一个引用，而真正的数据存储在堆内存中</p><p><br></p><h2>JSON.parse(JSON.stringify())</h2><p><br></p><p>利用JSON.stringify 将js对象序列化（JSON字符串），再使用JSON.parse来反序列化(还原)js对象，但是只能处理合法的JSON对象</p><p><br></p><h2>自己写一个</h2><p><br></p><p>首先明确需求，支持的数据类型, 所有的原始类型，普通对象，数组，不支持原型链上属性的拷贝</p>`;
